package eu.cumulus.testingpkg;

//
//This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
//See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
//Any modifications to this file will be lost upon recompilation of the source schema. 
//Generated on: 2014.04.03 at 12:01:41 AM CEST 
//

import java.math.BigInteger;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.HexBinaryAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;

/**
 * This object contains factory methods for each Java content interface and Java
 * element interface generated in the generated package.
 * <p>
 * An ObjectFactory allows you to programatically construct new instances of the
 * Java representation for XML content. The Java representation of XML content
 * can consist of schema derived interfaces and classes representing the binding
 * of schema type definitions, element declarations and model groups. Factory
 * methods for each of these are provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

	private final static QName _ActivityListTypeActivityId_QNAME = new QName(
			"", "ActivityId");
	private final static QName _ActivityListTypeActivityDescription_QNAME = new QName(
			"", "ActivityDescription");
	private final static QName _TCHash_QNAME = new QName("", "TC_Hash");
	private final static QName _TestBasedCertificate_QNAME = new QName("",
			"TestBasedCertificate");
	private final static QName _TestBasedCertificationModel_QNAME = new QName(
			"", "TestBasedCertificationModel");
	private final static QName _TestedSecurityProperty_QNAME = new QName("",
			"TestedSecurityProperty");
	private final static QName _LifeCycleTypeLifeCycleStatesLifeCycleId_QNAME = new QName(
			"", "LifeCycleId");
	private final static QName _LifeCycleTypeLifeCycleStatesLifeCycleState_QNAME = new QName(
			"", "LifeCycleState");
	private final static QName _LifeCycleTypeLifeCycleStatesLifeCycleTransitions_QNAME = new QName(
			"", "LifeCycleTransitions");
	private final static QName _TestTypeTestId_QNAME = new QName("", "testId");
	private final static QName _TestTypeTestInput_QNAME = new QName("",
			"testInput");
	private final static QName _TestTypeTestOutput_QNAME = new QName("",
			"testOutput");
	private final static QName _EventBusCollectorTypeEventId_QNAME = new QName(
			"", "EventId");
	private final static QName _EventBusCollectorTypeEventCode_QNAME = new QName(
			"", "EventCode");
	private final static QName _KeyInfoTypeRetrievalMethod_QNAME = new QName(
			"", "RetrievalMethod");
	private final static QName _KeyInfoTypeSPKIData_QNAME = new QName("",
			"SPKIData");
	private final static QName _KeyInfoTypeKeyValue_QNAME = new QName("",
			"KeyValue");
	private final static QName _KeyInfoTypeX509Data_QNAME = new QName("",
			"X509Data");
	private final static QName _KeyInfoTypeMgmtData_QNAME = new QName("",
			"MgmtData");
	private final static QName _KeyInfoTypePGPData_QNAME = new QName("",
			"PGPData");
	private final static QName _KeyInfoTypeKeyName_QNAME = new QName("",
			"KeyName");
	private final static QName _CapabilityTypeAttacker_QNAME = new QName("",
			"Attacker");
	private final static QName _CapabilityTypeAttackerCapabilities_QNAME = new QName(
			"", "AttackerCapabilities");
	private final static QName _CapabilityTypeAttackName_QNAME = new QName("",
			"AttackName");

	/**
	 * Create a new ObjectFactory that can be used to create new instances of
	 * schema derived classes for package: generated
	 * 
	 */
	public ObjectFactory() {
	}

	/**
	 * Create an instance of {@link TesterType }
	 * 
	 */
	public TesterType createTesterType() {
		return new TesterType();
	}

}
